"use strict";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,r){var t=[],n=!0,o=!1,i=void 0;try{for(var l,c=e[Symbol.iterator]();!(n=(l=c.next()).done)&&(t.push(l.value),!r||t.length!==r);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw i}}return t}function _arrayWithHoles(e){if(Array.isArray(e))return e}var btnScrollTo=document.querySelector(".hero__tell"),section1=document.querySelector(".beyond");btnScrollTo.addEventListener("click",function(e){section1.scrollIntoView({behavior:"smooth"})});var underlineSections=document.querySelectorAll(".observe-underline strong"),underlineSection=function(e,r){var t=_slicedToArray(e,1)[0];t.isIntersecting&&(t.target.classList.add("underline-text"),r.unobserve(t.target))},sectionObserver=new IntersectionObserver(underlineSection,{root:null,threshold:.15});underlineSections.forEach(function(e){sectionObserver.observe(e)});